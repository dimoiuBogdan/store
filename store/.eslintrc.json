{
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "react", "react-hooks"],
  "rules": {
    // TypeScript specific rules
    "@typescript-eslint/no-explicit-any": "warn", // Prevents usage of the 'any' type to maintain type safety
    "@typescript-eslint/explicit-function-return-type": "warn", // Requires explicit return types on functions
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_" }
    ], // Prevents unused variables except those starting with underscore
    "@typescript-eslint/consistent-type-imports": "error", // Enforces consistent usage of type imports

    // React specific rules
    "react/jsx-key": "error", // Ensures key prop is used in array iterations
    "react/jsx-no-target-blank": "error", // Prevents security issues with target="_blank"
    "react/no-array-index-key": "warn", // Discourages using array index as key prop
    "react/no-unused-prop-types": "error", // Prevents unused prop type definitions
    "react/self-closing-comp": "error", // Enforces self-closing for empty elements

    // React Hooks rules
    "react-hooks/rules-of-hooks": "error", // Enforces Rules of Hooks
    "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies

    // General JavaScript/Next.js rules
    "no-console": ["warn", { "allow": ["warn", "error"] }], // Allows only console.warn and console.error
    "prefer-const": "error", // Requires const declarations for variables that are never reassigned
    "no-unused-expressions": "error", // Disallows unused expressions
    "no-duplicate-imports": "error", // Prevents duplicate imports

    // Import rules
    "import/no-unresolved": "off", // TypeScript handles this

    // Next.js specific rules
    "@next/next/no-img-element": "error", // Enforces usage of next/image
    "@next/next/no-html-link-for-pages": "error", // Enforces usage of Link component

    // Performance rules
    "react/jsx-no-constructed-context-values": "error", // Prevents inline context values
    "react/jsx-no-useless-fragment": "error" // Prevents unnecessary fragments
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
